1
===================================================
1. Какие файлы описывают класс формы?
Designer.cs и .resx
2 Какие действия необходимо выполнить для создания обработчика события?
Чтобы добавить обработчик, можно просто два раза нажать по пустому полю рядом с названием события, и после этого Visual Studio автоматически сгенерирует обработчик события.
3 Где описывается код обработчика события? В каком файле регистрируется обработчик события (метод привязывается к событию)?
Designer.cs
4 Как получить доступ к координатам курсора мыши?
Через обработку событий мышки и событие MouseMove
5 Какой класс содержит методы, реализующие математические функции?
Math
===================================================
2
===================================================
1. Какое событие элемента управления Button обрабатывается в программах чаще всего? 
Наиболее часто приходится писать код для обработки события Click кнопки. 
	2. Для чего предназначен компонент CheckBox? Назовите основные свойства класса CheckBox. 
Элемент управления CheckBox также унаследован от ButtonBase и используется для приема двух или трех состояний от пользователя.  
	3. Опишите назначение элемента RadioButton. Какой внешний вид может принимать данный компонент? Назовите основные свойства класса RadioButton.
Переключатель (кнопки опций) – элемент управления, унаследованный от ButtonBase. Переключатели обычно используются в группе. 
Свойства: 
	- Свойство Appearance принимает значение перечисления Appearance, которым может быть Button либо Normal.
	- Свойство CheckedAlign определяет местоположение кружка по отношению к тексту метки. 
	4. Назовите классы компонентов для представления списочной информации.
Классы ComboBox, ListBox и CheckedListBox 
	5. Опишите основные свойства класса ListBox. Чем комопнет ListBox отличается от CheckedListBox? 
Элемент ListBox представляет собой простой список. Ключевым свойством этого элемента является свойство Items, которое как раз и хранит набор всех элементов списка. Они
отличаются друг от друга прежде всего тем, что ListBox только отображает данные и позволяет пользователю выбрать из них то, что ему надо, a ComboBox позволяет также
редактировать данные.

===================================================
3
===================================================
1. Какие элементы управления используются дял создания главного меню приложения?
MenuStrip: MenuItem, TextBox, ComboBox, Separator.

2. Какие элементы управления используются для создания контекстного меню элемента управления?
ContextMenuStrip: MenuItem, TextBox, ComboBox, Separator.

3. Как в режиме разработки указать элементу управления его контекстное меню?
Для этого нужно в свойствах формы, для которой нужно указать контекстное меню, в разделе Behavior для свойства ContextMenuStrip выбрать
нужное контекстное меню по имени. 

4. Какие типы данных используются для создания пунктов меню?
ToolStripMenuItem, ToolStripTextBox, ToolStripComboBox, ToolStripSeparator.

5. Поясните механизм синхронизации событий от разных элементов управления.
Для синхронизации событий от разных элементов управления нужно создавать флаги или использовать встроенные для проверки условия
выполнения того или иного действия.

6. Поясните назначение конструкции try...catch...
Назначение конструкции try-catch заключается в предотвращении аварийного завершения программы, в случае возникновения непредвиденных 
ошибок во время её выполнения.

7. Какие классы используются для создания строки состояния в .Net?
StatusStrip и StatusBar(удалён в .Net5).

8. Какие классы используются для создания панелей строки состояния? Каково назначение каждого из этих классов?
StatusStrip может состоять из произвольного количества панелей, который могут содержать текстовые и графические данные. В отличие от
StatusBar, может содержать доп.элеменыт управления: ToolStripProgressBar, ToolStripDropDownButton, ToolStripSplitButton.

9. Какой класс используется для работы с таймером? Какое событие элемента-таймера необходимо обрабатывать для реагирования на смену
системного времени?
Класс Timer. Событие Tick.

10. С помощью какого класса можно получить текущие дату и время? Какие методы содержит данный класс?
Структура DateTime содержит методы: Add(), Parse(), Subtract(), AddDays().

11. Что позволяет настраивать свойство Spring элементов-панелей строки состояния?
Будет ли элемент автоматически заполнять доступное место на StatusStrip при изменении формы.

===================================================
4
===================================================
1. Как создаются модальные диалоговые окна?
С помощью метода ShowDialog().

2. Что такое пространство имён?
Это набор методов, свойств и переменных, к которым можно обратиться по имени.

3. Какие простанства имён использованы в вашей программе? Какие типы данных из этих пространств использовались?
System, System.Windows.Forms. ColorDialog, FontDialog, SaveFileDialog.

4. Опишите механизм обработки событий для визуальных элементов управления.
Для обработки событий нужно в разделе Events выбранного элемента выбрать нужное нам событие, после чего в коде  создастся void метод, 
который необходимо заполнить действиями, выполняемыми при срабатывании данного события.

5. С каким модификатором доступности создаются элементы управления формы?
private.

6. Как возвращается информация о нажатой кнопке закрытия модального диалогового окна? Какое свойство диалогового окна используется 
для этого? Значения какого типа возвращает метод ShowDialog?
Диалоговое окно вернёт DialogResult.Ok, если пользовтаель нажал "Ok", и DialogResult.Cancel, если пользователь нажал "Cancel".

7. Для чего предназначен класс OpenFileDialog?
Для открытия каталога с последующим выбором нужного файла.

8. Для чего предназначен класс SaveFileDialog? Опишите основные методы и свойства данного класса.
Для выбора директории, в которую следует сохранить файл. ShowDialog() запускает общее диалоговое окно; Filter - задаёт варианты для 
выбора формата файла; FileName - возвращает имя файла.

9. Опишите принцип работы с классом ColorDialog. Опишите основные методы и свойства данного класса.
Для начала нужно создать экземпляр класса, затем создать переменную типа Color для сохранения выбранного цвета; после этого следует
вызвать диалоговое окно с помощью ShowDialog(). Если всё прошло по плану, то сохранить в переменную типа Color, которую мы ранее создали
цвет, который хранится в свойстве Color диалогового окна.

10. Опишите принципы работы с классом FontDialog. Опишите основные методы и свойства данного класса.
После создания экземпляра класса FontDialog нужно открыть диалоговое коно с помощью ShowDialog(), после чего выбрать нужные параметры и 
нажать "Ок". После этого можно будет оперировать выбранными значениями через свойства диалогового окна Font, Color и др.

===================================================
5
===================================================
1. Какие классы для работы с файловой системой вы знаете?
OpenFileDialog, SaveFileDialog, StreamReader.

2. Что такое класс потока? Перечислите классы потоков для работы с файлами?
Класс потока - это класс, позволяющий просматривать источники данных и хранилищ объектов.
Классы потоков дял работы с файлами: StreamReader, FileStream, Path.

3. Для чего используются интерфейсные типы? 
Интерфейсные типы используются дял определения поведения, которое будет впоследствии реализовано в каком-то конкретном классе.

4. Какие классы отвечают за представление файлов в программе?
RawDataItem, SummaryDataItem.

5. Опишите последовательность действий при необходимости записать одну строку в файл. Приведите примеры использования различных классов.
Для начала нужно подключить пространство имён System.IO, затем создать экземпляр класса StreamWriter, в конструктор которого нужно
передать путь к файлу, в который будет записана строка. После этого, с помощью метода WriteLine(), между скобок которого записывается
строка, информация будет записана в файл.

6. Опишите принципы работы с байтовым потоком. Приведите пример кода для записи и считывания файла с использованием байтового потока.
Для работы с байтовым потоком используются классы BinaryWriter и BinaryReader. Принцип работы с ними аналогичен принципу работы со
StreamReader.

7. Чем байтовый поток отличается от символьного?
При работе с байтовым поток нужно самому применять нужные кодировки. в то время, как символьный поток заранее обёрнут одной из 
кодировок. Поток байтов может использоваться для любого типа объектов, включая двоичные объекты, и поток символов может обрабатывать 
только символы или строки

===================================================
7
===================================================
1. Опишите основные свойства класса Window.
Icon: представляет иконку
Top:отступ верхней границы экрана
Left:отступ от левой границы экрана
ResizeMode: задает режим изменения размеров окна.
Title: заголовок окна.

2. Что такое контейнер компоновки? Для чего они используются? Опишите свойства класса Panel.
являются панелями, которые унаследованы от абстрактного класса System.Windows.Controls.Panel
<<разделяют>>доступное пространство между своими дочерними элементами. 
BackColor BorderStyle Font ForeColor FontHeight

3. Назовите основные контейнеры компоновки. Дайте характеристику и опишите особенности контейнеров компоновки.
StackPanel горизонтально/вертикально,WrapPanel полседовательности строк с переносом, DockPanel по краю,
Grid строки и колонки таблицы,UniformGrid тоже самое но ячейки одинаково размера,
Canvas абсолют по фикс. координатам 

4. Что такое присоединенное свойство? Приведите примеры.
 специализированная форма свойства зависимостей, у которых нет обычного свойства "оболочка"
<Button Content="кнопка 1" DockPanel.Dock="Top"/>

5. Какой контейнер применяется в окне приложения как контейнер компоновки по умолчанию?
Grid

6. Какие свойства элементов управления влияют на положение элементов внутри контейнера компоновки?
Location Size

===================================================
8
===================================================
1. Что такое стиль?
называется коллекция значений свойств, которые могут применяться к элементу

2. Что такое ресурс?
набор объектов, таких как Кисти, шаблоны, стили и т.д. которые хранятся в словаре и на которые 
ссылаются уникальные строки

3. Что такое триггер?
задает значения свойств или активирует различные действия (например, анимацию) 
при изменении значения свойства или при возникновении какого-либо события.

4. Опишите механизмы применения стилей.
Создать стиль и задать ему параметры.

5. Опишите механизмы применения триггеров.
Примерно то же что и стиль,но должно указываться событие 

6. Какие типы ресурсов вы знаете?
объектные ресурсы (object resource) – определенный .NET 

7. У каких элементов WPF может быть коллекция ресурсов?
Каждый элемент включает свойство Resources, в котором хранится словарная 
коллекция ресурсов

===================================================
9
===================================================
1. Что такое привязка WPF?
это простой и последовательный способ представления данных и взаимодействия с ними для приложений. 
Элементы можно связывать с данными из различных источников в виде объектов .NET и XML

2. Поясните синтаксис привязки. Какие ключевые слова и для каких целей используются при оформлении привязки с помощью XAML?
Binding ElemntName -по какому элементу Path-какое значение
 
3. Какие режимы привязки существуют? Поясните назначение всех режимов привязки.
OneWay ->;TwoWay<->;Onetime-no change;OWToSource<-;Deafult;

4. Поясните схему привязки элементов управления. Назовите основные элементы данной схемы.
Binding ElemntName -по какому элементу Path-какое значение Mode

5. Что означают понятия «целевой элемент», «элемент-источник привязки», «целевое свойство», «свойство-источник»?
Источник - элемент от котрого идет значение
Целевой - элемент к которому идет значение
Цел св-во - значение что меняется
св-во источник - свойсто что отвечает за значение

6. Какое ограничение на источник привязки существует в WPF
-Свойства, используемые в качестве свойств источника привязки, должны быть открытыми свойствами класса.
-привязка к открытым полям
-WPF не генерирует исключения для уведомления о проблемах привязки данных

===================================================
10
===================================================
1. Что такое привязка WPF?
Привязка WPF - это задавание значений свойств одного объекта в зависимости от свойств другого объекта. 

2. Поясните синтаксис привязки. Какие ключевые слова и для каких целей используются при оформлении привязки с помощью XAML?
Свойство={Binding Привязанное_свойство, ElementName=Имя_элемента_значение_которого_используется}

3. Какие режимы привязки существуют? Поясните назначение всех режимов привязки.
OneWay - изменяется только целевой элемент при изменениях исходного свойства; TwoWay - целевое свойство обновляется при изменениях
исходного свойства, а исходное свойство обновляется при изменениях целевого свойства; OneTime -Целевое свойство устанавливается 
изначально на основе значения исходного свойства. Однако с этого момента изменения игнорируются (если только привязка не
устанавливается на совершенно другой объект или не вызывается BondingExpression.UpdateTarget()). Обычно этот режим используется для 
сокращения накладных расходов, если известно, что целевое свойство не изменится; OneWayToSource - OneWay наоборот; Default - Twoway для
устанавливаемых пользователем свойств (например TextBox.Text) и OneWay для всего остального.

4. Поясните схему привязки элементов управления. Назовите основные элементы данной схемы.
Создаётся элемент управление, которому задаются параметры, затем создаётся другой элемент, в описании которого применяется синтаксис
привязки для нужного свойства.

5. Что означают понятия «целевой элемент», «элемент-источник привязки», «целевое свойство», «свойство-источник»?
Целевой элемент - элемент которому меняют свойства, элемент-источник привязки - элемент, который меняет свойства целевому элементу;
целевое свойство - свойство, которое будет изменяться, свойство-источник - свойство, которое будет изменять.

6. Какое ограничение на источник привязки существует в WPF?
Режим OneWay.
